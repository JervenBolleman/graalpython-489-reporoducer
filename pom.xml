<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.test</groupId>
  <artifactId>test</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>test</name>

  <properties>
    <graalpy.version>24.2.0</graalpy.version>
    <graalpy.edition>python-community</graalpy.edition>
    <native-maven-plugin.version>0.10.4</native-maven-plugin.version>
    <maven.compiler.target>17</maven.compiler.target>
    <maven.compiler.source>17</maven.compiler.source>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.graalvm.polyglot</groupId>
      <artifactId>${graalpy.edition}</artifactId>
      <version>${graalpy.version}</version>
      <type>pom</type>
    </dependency>    
    <dependency>
      <groupId>org.graalvm.python</groupId>
      <artifactId>python-embedding</artifactId>
        <version>${graalpy.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.graalvm.python</groupId>
        <artifactId>graalpy-maven-plugin</artifactId>
        <version>${graalpy.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>process-graalpy-resources</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- specify the Java resource directory for the virtual filesystem -->
          <!-- put your custom scripts, datasets and other data into this directory
               to make them available in Python. Subdirectory "src" will be also
               added to PYTHONPATH, i.e., Python scripts from that directory can
               be imported as modules in Python -->
          <resourceDirectory>GRAALPY-VFS/${project.groupId}/${project.artifactId}</resourceDirectory>
          <!-- specify python packages and their versions as if used with pip -->
          <packages>
            <package>rdflib==7.1.3</package>
          </packages>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>native</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>${native-maven-plugin.version}</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>compile-no-fork</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
            <configuration>
              <fallback>false</fallback>
              <mainClass>org.test.GraalPy</mainClass>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
